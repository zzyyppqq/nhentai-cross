buildscript {
    ext.kotlin_version = '1.8.22'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}


subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
            //println "project: ${project.name} Namespace get: ${project.android.namespace}"
            def packageName = project.android.namespace ?: project.android.defaultConfig.applicationId ?: project.android.sourceSets.main.manifest.srcFile.text.find(/package="([^"]*)"/) ?: project.group
            project.android.namespace = packageName
            //println "Namespace set to: ${packageName} for project: ${project.name}"
            def manifestFile = project.android.sourceSets.main.manifest.srcFile
            if (manifestFile.exists()) {
                def manifestText = manifestFile.text
                if (manifestText.contains('package=')) {
                    manifestText = manifestText.replaceAll(/package="[^"]*"/, "")
                    manifestFile.text = manifestText
                    //println "Package attribute removed in AndroidManifest.xml for project: ${project.name}"
                } else {
                    //println "No package attribute found in AndroidManifest.xml for project: ${project.name}"
                }
            } else {
                //println "AndroidManifest.xml not found for project: ${project.name}"
            }
        }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
